paste("Correlation between Victoria and Nuria is:", r1)
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
qplot(ratingVictoria, ratingNuria)
library(data.table)
library(dplyr)
library(ggplot2)
rdf <- data.frame(read.csv("critics.csv", header = TRUE, stringsAsFactors = FALSE))
ratingV <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingN <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
r1 <- cor(ratingV, ratingN, method = c("pearson"), use = "pairwise.complete.obs")
paste("Correlation between Victoria and Nuria is:", r1)
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
qplot(ratingVictoria, ratingNuria)
ratingMaria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
ratingNerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
qplot(ratingMaria, ratingNerea)
ratingChris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
ratingJim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
qplot(ratingChris, ratingJim)
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
qplot(ratingVictoria, ratingNuria) + geom_abline(slope=1, intercept = 0)
ratingMaria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
ratingNerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
qplot(ratingMaria, ratingNerea) + geom_abline(slope=1, intercept = 0)
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
qplot(ratingVictoria, ratingNuria) + geom_abline()
ratingMaria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
ratingNerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
qplot(ratingMaria, ratingNerea) + geom_abline()
ratingChris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
ratingJim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
qplot(ratingChris, ratingJim) + geom_abline()
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
qplot(ratingVictoria, ratingNuria) + geom_line()
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
qplot(ratingVictoria, ratingNuria) + geom_smooth()
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
qplot(ratingVictoria, ratingNuria, geom = c("point", "smooth"))
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
qplot(ratingVictoria, ratingNuria)
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
qplot(ratingVictoria, ratingNuria, geom = c("point", "smooth"))
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
qplot(ratingVictoria, ratingNuria, geom = c("smooth"))
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
qplot(ratingVictoria, ratingNuria, geom = c("point","smooth"))
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
p1 = qplot(ratingVictoria, ratingNuria, geom = c("point","smooth")) #+ geom_smooth()
#ggplot(rdf, aes('wt', 'mpg')) + geom_line()
ratingMaria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
ratingNerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(ratingMaria, ratingNerea, geom= c("point","smooth")) + geom_abline()
ratingChris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
ratingJim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
p3 = qplot(ratingChris, ratingJim, geom=c("point","smooth")) + geom_abline()
grid.arrange(p1,p2,p3)
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
p1 = qplot(ratingVictoria, ratingNuria, geom = c("point","smooth")) #+ geom_smooth()
#ggplot(rdf, aes('wt', 'mpg')) + geom_line()
ratingMaria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
ratingNerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(ratingMaria, ratingNerea, geom= c("point","smooth")) + geom_abline()
ratingChris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
ratingJim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
p3 = qplot(ratingChris, ratingJim, geom=c("point","smooth")) + geom_abline()
grid.arrange(p1, p2, p3, nrow = 1)
library(data.table)
library(dplyr)
library(ggplot2)
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
p1 = qplot(ratingVictoria, ratingNuria, geom = c("point","smooth")) #+ geom_smooth()
#ggplot(rdf, aes('wt', 'mpg')) + geom_line()
ratingMaria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
ratingNerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(ratingMaria, ratingNerea, geom= c("point","smooth")) + geom_abline()
ratingChris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
ratingJim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
p3 = qplot(ratingChris, ratingJim, geom=c("point","smooth")) + geom_abline()
grid.arrange(p1, p2, p3, nrow = 1)
rdf <- data.frame(read.csv("critics.csv", header = TRUE, stringsAsFactors = FALSE))
m1 <- t(rdf)            ## Traspose the data frame
colnames(m1) = m1[1,]  ## Assign the column names
m1 =m1[-1,]            ## Eliminate first row
## Convert it to data frame in order to transform values to numeric
d2 <- data.frame(m1)
d2[1:20] <- lapply(d2[1:20], function(x) as.numeric(as.character(x)))
d2.1=d2[1:20]
## Correlation table
d3=cor(d2.1[,unlist(lapply(d2.1,is.numeric))],use="pairwise.complete.obs")
## Select the movies that Victoria hasn't watch yet
MOVIES=rownames(d2.1[is.na(d2.1$Victoria == "NA"),15,drop=F])
## User ratings for all the movies that Victoria hasn't watch yet
dff=rdf[1:20,c(MOVIES)]
## Calculate the mean for all the users
user_mean = rowMeans(rdf[,2:21],na.rm=T)
## Calculate the difference between the Rating of each movie with its respective User Mean
almostdiff=cbind(dff,user_mean)
diff = (almostdiff-almostdiff$user_mean)[-15,-8]
## Multiply the previous Difference by each user Correlation that Victoria.
almostdiff2=cbind(diff,corr=(d3[,15])[-15])
df3=colSums((almostdiff2*almostdiff2$corr)[-8],na.rm=T)
## Divide it by the Sum of all the Pearson correlations
df3=df3/sum(abs((d3[,15])[-15]),na.rm=T)
## Finally sum all the movie results with Victoria rating's mean
df3=df3+ mean(d2.v$Victoria)
m1 <- t(rdf)            ## Traspose the data frame
colnames(m1) = m1[1,]  ## Assign the column names
m1 =m1[-1,]            ## Eliminate first row
## Convert it to data frame in order to transform values to numeric
d2 <- data.frame(m1)
d2[1:20] <- lapply(d2[1:20], function(x) as.numeric(as.character(x)))
d2.1=d2[1:20]
## Correlation table
d3=cor(d2.1[,unlist(lapply(d2.1,is.numeric))],use="pairwise.complete.obs")
## Select the movies that Victoria hasn't watch yet
MOVIES=rownames(d2.1[is.na(d2.1$Victoria == "NA"),15,drop=F])
## User ratings for all the movies that Victoria hasn't watch yet
dff=rdf[1:20,c(MOVIES)]
## Calculate the mean for all the users
user_mean = rowMeans(rdf[,2:21],na.rm=T)
## Calculate the difference between the Rating of each movie with its respective User Mean
almostdiff=cbind(dff,user_mean)
diff = (almostdiff-almostdiff$user_mean)[-15,-8]
## Multiply the previous Difference by each user Correlation that Victoria.
almostdiff2=cbind(diff,corr=(d3[,15])[-15])
df3=colSums((almostdiff2*almostdiff2$corr)[-8],na.rm=T)
## Divide it by the Sum of all the Pearson correlations
df3=df3/sum(abs((d3[,15])[-15]),na.rm=T)
## Finally sum all the movie results with Victoria rating's mean
df3=df3+ mean(d2$Victoria)
head(sort(df3,decreasing=T),n=5)
m1 <- t(rdf)            ## Traspose the data frame
colnames(m1) = m1[1,]  ## Assign the column names
m1 =m1[-1,]            ## Eliminate first row
## Convert it to data frame in order to transform values to numeric
d2 <- data.frame(m1)
d2[1:20] <- lapply(d2[1:20], function(x) as.numeric(as.character(x)))
d2.1=d2[1:20]
## Correlation table
d3=cor(d2.1[,unlist(lapply(d2.1,is.numeric))],use="pairwise.complete.obs")
## Select the movies that Victoria hasn't watch yet
MOVIES=rownames(d2.1[is.na(d2.1$Victoria == "NA"),15,drop=F])
## User ratings for all the movies that Victoria hasn't watch yet
dff=rdf[1:20,c(MOVIES)]
## Calculate the mean for all the users
user_mean = rowMeans(rdf[,2:21],na.rm=T)
## Calculate the difference between the Rating of each movie with its respective User Mean
almostdiff=cbind(dff,user_mean)
diff = (almostdiff-almostdiff$user_mean)[-15,-8]
## Multiply the previous Difference by each user Correlation that Victoria.
almostdiff2=cbind(diff,corr=(d3[,15])[-15])
df3=colSums((almostdiff2*almostdiff2$corr)[-8],na.rm=T)
## Divide it by the Sum of all the Pearson correlations
df3=df3/sum(abs((d3[,15])[-15]),na.rm=T)
## Finally sum all the movie results with Victoria rating's mean
df3=df3+ mean(d2$Victoria)
head(sort(df3,decreasing=T),n=5)
m1 <- t(rdf)            ## Traspose the data frame
colnames(m1) = m1[1,]  ## Assign the column names
m1 =m1[-1,]            ## Eliminate first row
## Convert it to data frame in order to transform values to numeric
d2 <- data.frame(m1)
d2[1:20] <- lapply(d2[1:20], function(x) as.numeric(as.character(x)))
d2.1=d2[1:20]
## Correlation table
d3=cor(d2.1[,unlist(lapply(d2.1,is.numeric))],use="pairwise.complete.obs")
## Select the movies that Victoria hasn't watch yet
MOVIES=rownames(d2.1[is.na(d2.1$Victoria == "NA"),15,drop=F])
## User ratings for all the movies that Victoria hasn't watch yet
dff=rdf[1:20,c(MOVIES)]
## Calculate the mean for all the users
user_mean = rowMeans(rdf[,2:21],na.rm=T)
## Calculate the difference between the Rating of each movie with its respective User Mean
almostdiff=cbind(dff,user_mean)
diff = (almostdiff-almostdiff$user_mean)[-15,-8]
## Multiply the previous Difference by each user Correlation that Victoria.
almostdiff2=cbind(diff,corr=(d3[,15])[-15])
df3=colSums((almostdiff2*almostdiff2$corr)[-8],na.rm=T)
## Divide it by the Sum of all the Pearson correlations
df3=df3/sum(abs((d3[,15])[-15]),na.rm=T)
## Finally sum all the movie results with Victoria rating's mean
df3=df3+ mean(d2$Victoria)
head(sort(df3,decreasing=T),n=5)
m1 <- t(rdf)            ## Traspose the data frame
colnames(m1) = m1[1,]  ## Assign the column names
m1 =m1[-1,]            ## Eliminate first row
## Convert it to data frame in order to transform values to numeric
d2 <- data.frame(m1)
d2[1:20] <- lapply(d2[1:20], function(x) as.numeric(as.character(x)))
d2.1=d2[1:20]
## Correlation table
d3=cor(d2.1[,unlist(lapply(d2.1,is.numeric))],use="pairwise.complete.obs")
## Select the movies that Victoria hasn't watch yet
MOVIES=rownames(d2.1[is.na(d2.1$Victoria == "NA"),15,drop=F])
## User ratings for all the movies that Victoria hasn't watch yet
dff=rdf[1:20,c(MOVIES)]
## Calculate the mean for all the users
user_mean = rowMeans(rdf[,2:21],na.rm=T)
## Calculate the difference between the Rating of each movie with its respective User Mean
almostdiff=cbind(dff,user_mean)
diff = (almostdiff-almostdiff$user_mean)[-15,-8]
## Multiply the previous Difference by each user Correlation that Victoria.
almostdiff2=cbind(diff,corr=(d3[,15])[-15])
df3=colSums((almostdiff2*almostdiff2$corr)[-8],na.rm=T)
## Divide it by the Sum of all the Pearson correlations
df3=df3/sum(abs((d3[,15])[-15]),na.rm=T)
## Finally sum all the movie results with Victoria rating's mean
df3=df3+ mean(d2.1$Victoria)
head(sort(df3,decreasing=T),n=5)
m1 <- t(rdf)            ## Traspose the data frame
colnames(m1) = m1[1,]  ## Assign the column names
m1 =m1[-1,]            ## Eliminate first row
## Convert it to data frame in order to transform values to numeric
d2 <- data.frame(m1)
d2[1:20] <- lapply(d2[1:20], function(x) as.numeric(as.character(x)))
d2.1=d2[1:20]
## Correlation table
d3=cor(d2.1[,unlist(lapply(d2.1,is.numeric))],use="pairwise.complete.obs")
## Select the movies that Victoria hasn't watch yet
MOVIES=rownames(d2.1[is.na(d2.1$Victoria == "NA"),15,drop=F])
## User ratings for all the movies that Victoria hasn't watch yet
dff=rdf[1:20,c(MOVIES)]
## Calculate the mean for all the users
user_mean = rowMeans(rdf[,2:21],na.rm=T)
## Calculate the difference between the Rating of each movie with its respective User Mean
almostdiff=cbind(dff,user_mean)
diff = (almostdiff-almostdiff$user_mean)[-15,-8]
## Multiply the previous Difference by each user Correlation that Victoria.
almostdiff2=cbind(diff,corr=(d3[,15])[-15])
df3=colSums((almostdiff2*almostdiff2$corr)[-8],na.rm=T)
## Divide it by the Sum of all the Pearson correlations
df3=df3/sum(abs((d3[,15])[-15]),na.rm=T)
library(data.table)
library(dplyr)
library(plyr)
library(data.table)
library(dplyr)
library(plyr)
transpose_data_frame <- function(df) {
t_df <- transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
return (t_df)
}
rdf <- data.frame(read.csv("critics.csv", header = TRUE, stringsAsFactors = FALSE))
mnames <- colnames(rdf) # contain the movie names
mnames <- mnames[-1] #first one is not a movie name
unames <- rdf[,1] # contain the usernames
#remove the first column from the data frame - thats useless
rdf1 = rdf
rdf <- rdf[, -1]
avgrating <- colMeans(rdf, na.rm = TRUE)
# append average rating to the data frame as a row
rdfwithmean <- rbind(rdf, avgrating)
#transpose the data frame now
trdf <- transpose_data_frame(rdfwithmean)
trdf <- trdf %>% mutate(Movie = mnames) # we can also use "trdf <- cbind(trdf, mnames)" or perhaps (trdf$Movie <- mnames)
trdfd <- trdf %>% select(`21`, Movie) %>% arrange(desc(trdf$`21`))
print(trdfd[1:5,])
get_pc_4_or_5 <- function(ratings1) {
t <- table(ratings1)
return (sum(t[names(t) >= 4]) / sum(!is.na(ratings1)))
}
numofmovies = nrow(trdf)
pcmorethan4 = vector(mode = "double", length = numofmovies)
for (row in 1:numofmovies) {
ratings = trdf[row, 1:20]
pcmorethan4[row] <- get_pc_4_or_5(unlist(ratings))
}
print(pcmorethan4)
trdf <- trdf %>% mutate("PCgt4" = pcmorethan4)
trdf_d_by_pcgt4 <- trdf %>% selec
get_pc_4_or_5 <- function(ratings1) {
t <- table(ratings1)
return (sum(t[names(t) >= 4]) / sum(!is.na(ratings1)))
}
numofmovies = nrow(trdf)
pcmorethan4 = vector(mode = "double", length = numofmovies)
for (row in 1:numofmovies) {
ratings = trdf[row, 1:20]
pcmorethan4[row] <- get_pc_4_or_5(unlist(ratings))
}
print(pcmorethan4)
trdf <- trdf %>% mutate("PCgt4" = pcmorethan4)
trdf_d_by_pcgt4 <- trdf %>% select(PCgt4, Movie) %>% arrange(desc(trdf$PCgt4))
print(trdf_d_by_pcgt4[1:5,])
numofmovies = nrow(trdf)
no_of_ratings = vector(mode = "integer", length = numofmovies)
for (row in 1:numofmovies) {
ratings = trdf[row, 1:20]
no_of_ratings[row] <- sum(!is.na(ratings))
}
print(no_of_ratings)
trdf <- trdf %>% mutate("NoOfRatings" = no_of_ratings)
trdf_d_by_NoOfRtgs <- trdf %>% select(NoOfRatings, Movie) %>% arrange(desc(trdf$NoOfRatings))
print(trdf_d_by_NoOfRtgs[1:5,])
top5 = rdf1[complete.cases(rdf1$Star.Wars.IV...A.New.Hope), ] #We identify the complete rated critics of the movies
top5 = top5[2:20] != "NA"  #We exclude the NAs from the data, so the movies which are not rated
#View(cm5)
top5.1 = colSums(top5, na.rm = T) # We sum up the rating of each movie
top5.1 = sort(top5.1, decreasing = T) # We sort in descending order
top5.1 = head(top5.1, n = 6) # We finally select the top 6 movies rating, 6 because we need to keep as well "Star Wars IV...a New Hope"
top5.1 = data.frame(common=head(top5.1)) # The Data are transformed into a data frame
#View(cm5.1) # Let's see the rating of the top 6 movie rating
cm6 = top5.1[2:6,,drop=F]/(cm5.1[1,]) # Last step is to calculate the percentage of the other movie raters who also rated that movie
top5 = rdf1[complete.cases(rdf1$Star.Wars.IV...A.New.Hope), ] #We identify the complete rated critics of the movies
top5 = top5[2:20] != "NA"  #We exclude the NAs from the data, so the movies which are not rated
#View(cm5)
top5.1 = colSums(top5, na.rm = T) # We sum up the rating of each movie
top5.1 = sort(top5.1, decreasing = T) # We sort in descending order
top5.1 = head(top5.1, n = 6) # We finally select the top 6 movies rating, 6 because we need to keep as well "Star Wars IV...a New Hope"
top5.1 = data.frame(common=head(top5.1)) # The Data are transformed into a data frame
#View(cm5.1) # Let's see the rating of the top 6 movie rating
cm6 = top5.1[2:6,,drop=F]/(top5.1[1,]) # Last step is to calculate the percentage of the other movie raters who also rated that movie
head(cm6, n = 5) # We print the Top Occurences
likedBabeDf=rdf1[complete.cases(critics$Babe), ] # We select the rated critics from Babe movie
likedBabeDf=rdf1[complete.cases(rdf$Babe), ] # We select the rated critics from Babe movie
likedBabeDf=likedBabeDf[(likedBabeDf$Babe==4|likedBabeDf$Babe==5),] # We select only critics with rating 4 or 5
#View(likedBabeDf) # Let's view the Data
likedBabeDf1=likedBabeDf[-which(colnames(likedBabeDf)=="Babe")] # At that point we don'T need anymore the Babe rating
likedBabeDf1=likedBabeDf1[-which(colnames(likedBabeDf1)=="User")] # We don't need the name of the rater
#View(likedBabeDf1) # Let's view the data
likedBabeDf2 = colMeans(likedBabeDf1, na.rm=T) # Let's calculate the average rating
likedBabeDf2 = sort(likedBabeDf2, decreasing = T) # We sort in descending order
likedBabeDf2 = head(likedBabeDf2, n = 5) # We select the top 5 movies
head(likedBabeDf2) # We print out the movies better rated of people who liked Babe with 4 or 5 stars.
library(data.table)
library(dplyr)
library(ggplot2)
rdf <- data.frame(read.csv("critics.csv", header = TRUE, stringsAsFactors = FALSE))
ratingV <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingN <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
r1 <- cor(ratingV, ratingN, method = c("pearson"), use = "pairwise.complete.obs")
paste("Correlation between Victoria and Nuria is:", r1)
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
p1 = qplot(ratingVictoria, ratingNuria, geom = c("point","smooth")) #+ geom_smooth()
#ggplot(rdf, aes('wt', 'mpg')) + geom_line()
ratingMaria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
ratingNerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(ratingMaria, ratingNerea, geom= c("point","smooth")) + geom_abline()
ratingChris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
ratingJim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
p3 = qplot(ratingChris, ratingJim, geom=c("point","smooth")) + geom_abline()
grid.arrange(p1, p2, p3, nrow = 1)
rdf[rdf$User=="Victoria", 2:21]
plot(rdf[rdf$User=="Victoria", 2:21], rdf[rdf$User=="Nuria", 2:21])
View(rdf)
x <- t(rdf)
View(x)
colnames(x) <- x[1,]
View(x)
x = x[-1,]
View(x)
qplot(Victoria, Nuria, data=x) + geom_smooth()
typeof(x)
qplot(as.numeric(Victoria), as.numeric(Nuria), data=x) + geom_smooth()
x1 <- data.frame(x)
qplot(as.numeric(Victoria), as.numeric(Nuria), data=x1) + geom_smooth()
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
p1 = qplot(ratingVictoria, ratingNuria, geom = c("point","smooth")) #+ geom_smooth()
#ggplot(rdf, aes('wt', 'mpg')) + geom_line()
ratingMaria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
ratingNerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(ratingMaria, ratingNerea, geom= c("point","smooth")) + geom_abline()
ratingChris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
ratingJim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
p3 = qplot(ratingChris, ratingJim, geom=c("point","smooth")) + geom_abline()Victoria
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
p1 = qplot(ratingVictoria, ratingNuria, geom = c("point","smooth")) #+ geom_smooth()
#ggplot(rdf, aes('wt', 'mpg')) + geom_line()
ratingMaria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
ratingNerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(ratingMaria, ratingNerea, geom= c("point","smooth")) + geom_abline()
ratingChris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
ratingJim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
p3 = qplot(ratingChris, ratingJim, geom=c("point","smooth")) + geom_abline()
grid.arrange(p1, p2, p3, nrow = 1)
qplot(as.numeric(Victoria), as.numeric(Nuria), data=x1) + geom_smooth()
install.packages(gridExtra, dep=TRUE)
install.packages("gridExtra", dep=TRUE)
library(data.table)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(grid)
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
p1 = qplot(ratingVictoria, ratingNuria, geom = c("point","smooth")) #+ geom_smooth()
#ggplot(rdf, aes('wt', 'mpg')) + geom_line()
ratingMaria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
ratingNerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(ratingMaria, ratingNerea, geom= c("point","smooth")) + geom_abline()
ratingChris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
ratingJim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
p3 = qplot(ratingChris, ratingJim, geom=c("point","smooth")) + geom_abline()
grid.arrange(p1, p2, p3, nrow = 1)
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
p1 = qplot(ratingVictoria, ratingNuria, geom = c("point","smooth")) + geom_abline()
#ggplot(rdf, aes('wt', 'mpg')) + geom_line()
ratingMaria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
ratingNerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(ratingMaria, ratingNerea, geom= c("point","smooth")) + geom_abline()
ratingChris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
ratingJim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
p3 = qplot(ratingChris, ratingJim, geom=c("point","smooth")) + geom_abline()
grid.arrange(p1, p2, p3, nrow = 1)
ratingVictoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
ratingNuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
p1 = qplot(ratingVictoria, ratingNuria, geom = c("point","smooth")) + geom_line()
#ggplot(rdf, aes('wt', 'mpg')) + geom_line()
ratingMaria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
ratingNerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(ratingMaria, ratingNerea, geom= c("point","smooth")) + geom_line()
ratingChris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
ratingJim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
p3 = qplot(ratingChris, ratingJim, geom=c("point","smooth")) + geom_line()
grid.arrange(p1, p2, p3, nrow = 1)
rating_Victoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
rating_Nuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
p1 = qplot(rating_Victoria, rating_Nuria, geom = c("point","smooth"))
#ggplot(rdf, aes('wt', 'mpg')) + geom_line()
rating_Maria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
rating_Nerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(rating_Maria, rating_Nerea, geom= c("point","smooth"))
rating_Chris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
rating_Jim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
p3 = qplot(ratingChris, ratingJim, geom=c("point","smooth"))
grid.arrange(p1, p2, p3, nrow = 1)
rating_Victoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
rating_Nuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
p1 = qplot(rating_Victoria, rating_Nuria, geom = c("point","smooth"))
#ggplot(rdf, aes('wt', 'mpg')) + geom_line()
rating_Maria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
rating_Nerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(rating_Maria, rating_Nerea, geom= c("point","smooth"))
rating_Chris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
rating_Jim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
p3 = qplot(ratingChris, ratingJim, geom=c("point","smooth"))
grid.arrange(p1, p2, p3, nrow = 1)
rating_Victoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
rating_Nuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
p1 = qplot(rating_Victoria, rating_Nuria, geom = c("point","smooth"))
#ggplot(rdf, aes('wt', 'mpg')) + geom_line()
rating_Maria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
rating_Nerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(rating_Maria, rating_Nerea, geom= c("point","smooth"))
rating_Chris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
rating_Jim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
p3 = qplot(rating_Chris, rating_Jim, geom=c("point","smooth"))
rating_Victoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
rating_Nuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
p1 = qplot(rating_Victoria, rating_Nuria, geom = c("point","smooth"))
#ggplot(rdf, aes('wt', 'mpg')) + geom_line()
rating_Maria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
rating_Nerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(rating_Maria, rating_Nerea, geom= c("point","smooth"))
rating_Chris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
rating_Jim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
p3 = qplot(rating_Chris, rating_Jim, geom=c("point","smooth"))
grid.arrange(p1, p2, p3, nrow = 1)
rating_Maria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
rating_Nerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(rating_Maria, rating_Nerea, geom= c("point","smooth"))
r1 <- cor(rating_Maria, rating_Nerea, method = c("pearson"), use = "pairwise.complete.obs")
paste("Correlation between MAria and Nerea is:", r1)
rating_Victoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
rating_Nuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
p1 = qplot(rating_Victoria, rating_Nuria, geom = c("point","smooth"))
#ggplot(rdf, aes('wt', 'mpg')) + geom_line()
rating_Maria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
rating_Nerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(rating_Maria, rating_Nerea, geom= c("point","smooth"))
r1 <- cor(rating_Maria, rating_Nerea, method = c("pearson"), use = "pairwise.complete.obs")
paste("Correlation between MAria and Nerea is:", r1)
rating_Chris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
rating_Jim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
p3 = qplot(rating_Chris, rating_Jim, geom=c("point","smooth"))
grid.arrange(p1, p2, p3, nrow = 1)
rating_Victoria <- as.numeric(as.vector(rdf[rdf$User=="Victoria", 2:21]))
rating_Nuria <- as.numeric(as.vector(rdf[rdf$User=="Nuria", 2:21]))
p1 = qplot(rating_Victoria, rating_Nuria, geom = c("point","smooth"))
r1 <- cor(rating_Victoria, rating_Nuria, method = c("pearson"), use = "pairwise.complete.obs")
paste("Correlation between Victoria and Nuria is:", r1)
rating_Maria <- as.numeric(as.vector(rdf[rdf$User=="Maria", 2:21]))
rating_Nerea <- as.numeric(as.vector(rdf[rdf$User=="Nerea", 2:21]))
p2 = qplot(rating_Maria, rating_Nerea, geom= c("point","smooth"))
r1 <- cor(rating_Maria, rating_Nerea, method = c("pearson"), use = "pairwise.complete.obs")
paste("Correlation between Maria and Nerea is:", r1)
rating_Chris <- as.numeric(as.vector(rdf[rdf$User=="Chris", 2:21]))
rating_Jim <- as.numeric(as.vector(rdf[rdf$User=="Jim", 2:21]))
p3 = qplot(rating_Chris, rating_Jim, geom=c("point","smooth"))
r1 <- cor(rating_Chris, rating_Jim, method = c("pearson"), use = "pairwise.complete.obs")
paste("Correlation between Chris and Jim is:", r1)
grid.arrange(p1, p2, p3, nrow = 1)
